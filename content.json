{"pages":[{"title":"关于我","text":"####关于我待完善哈~~~","path":"about/index.html","date":"01-07","excerpt":""}],"posts":[{"title":"新起点，新起航","text":"当一个普通的程序员时间久了，就会越迷茫越空虚，新的技术层出不穷，老的技术点没吃透，立志想成为人人敬仰的技术大牛，却不知从何开始。 于是我开始思考一个新入门的程序员和一位资深程序员的区别。最表面的就是资深程序员好像可以解决一切问题，深层次一点就是会多少多少门编程语言，数据结构算法很厉害，会什么框架架构等等。然而一个人的时间精力都是有限的，那么如何在有限的时间里，学会更多的知识，更深的技术呢？这就需要我们透过现象看本质，找到真正能提升自己的核心。 我们都知道编程语言都是有通用性的。当你已经熟练使用一门语言，那么如果要去学一门新的语言，对你来说肯定不是难事，所以我们不必花费大量的时间去学习各种编程语言。 在数据结构概论中，我们学习到程序=数据结构+算法，由此可见数据结构与算法对于一个程序员的重要性。只要涉及到软件程序就会数据结构，算法。如果这块不熟练的话，有必要花时间去掌握。 在日常工作中，当我们需要实现一个原生系统没有的组件，或者实现方式，那么我们通常的做法是在github找一个框架，使用现成的或者改一改就能应付日常工作了。如果修改仍然达不到需求想要的效果，那怎么办？到此就需要自己动手丰衣足食了，这也是提升核心竞争力(逼格)的一个要点，首先找几个有代表性的框架，精读源码。总结其中的规律和方法，仿照实践，以此来提升。 除上所诉，我认为逻辑思维跟语言组织表达能力很重要。同样一个功能，大神跟菜鸟实现的方式是截然不同的，我们需要做的就是不断的学习，思考，练习。 从今天开始，从数据结构开始，坚持写作。","path":"2018/04/07/新起点，新起航/","date":"04-07","excerpt":"","preview":"http://p2.so.qhimgs1.com/t0102141402d650ef1e.jpg"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2017/07/20/hello-world/","date":"07-20","excerpt":""}]}